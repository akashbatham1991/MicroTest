NoSQL CAP Theorem:
------------------
If you have experience working with NoSQL databases, you are likely familiar with the CAP theorem, 
which consists of three components: 
	Consistency (C) , 
	Availability (A), and 
	Partition Tolerance (P)
 
•	Consistency means: 
		that data is the same across the cluster, so you can read or write from/to any node and get the same data
 
•	Availability means: 
		the ability to access the cluster even if a node in the cluster goes down
 
•	Partition Tolerance means: 
		that the cluster continues to function even if there is a "partition" (communication break) between two nodes (both nodes are up but can't communicate)


For a distributed (i.e., multi-node) system to not require partition tolerance, it would have to run on a network that is guaranteed never to drop messages (or even deliver them late) and whose nodes are guaranteed never to die. Unfortunately, I don’t know any of such a system. 


Now, why are all 3 not possible?? To get availability and partition tolerance, you have to give up consistency. 
	For example, 
		consider if you have two nodes, X and Y, in a master-master setup. Now, there is a break in network communication between X and Y, so they can't sync updates. At this point, you can either:
			a.	Allow the nodes to get “out of sync” (giving up consistency), or
			b.	Consider the cluster to be "down" (giving up availability)
 

All the combinations available are:
-----------------------------------
CA - Data is consistent between all nodes - as long as all nodes are online - and you can read/write from any node and be sure that the data is the same, but if you ever develop a partition between nodes, the data will be out of sync (and won't re-sync once the partition is resolved).
 
CP - Data is consistent between all nodes, and maintains partition tolerance (preventing data desync) by becoming unavailable when a node goes down.
 
AP - Nodes remain online even if they can't communicate with each other and will resync data once the partition is resolved, but you aren't guaranteed that all nodes will have the same data (either during or after the partition).


Therefore, consistency and availability can never exist together. The key point here is that P is not visible to the customer. It is a technology solution to enable C and A. Therefore, customers can only experience C and A. 


However, Google cloud’s offering Spanner DB can almost break the CAP theorem.